1. - A rendszer céljai és nem céljai

	- A rendszer célja, hogy a felhasználó otthonról, kényelmesen tudja megszerezni kedvenc számítógépes vagy éppen konzolos játékát. Áron alul, illetve kedvezményekkel együtt.
	- A rendszer nem célja a felhasználó átverése, pénzével való vissszaélése.

2. - Projektterv
	
	- Követelmény Specifikáció, Funkcionális Specifikáció, Rendszerterv elkészítése (november 18)
	- Login és Regisztrációs felület elkészítése (november 22)
	- Adatbázis kapcsolat elkészítése (november 26)
	- Fő felület elkészítése (november 29)
	- Fő felület funkciói (december 2)
	- Tesztelés (december 9)


3. - Üzleti folyamatok modellje
	
	Szereplők:
		- Felhasználó
		- Admin

	Üzleti folyamatok:
		- Nézelődés:
			-Lehetőség van vásárlás nélkül a termékek között nézelődni a vevőnek.
		- Kosár használata:
			-Itt sem történik meg a vásárlás, csak el lehet tenni a terméket későbbre, és tovább böngészni a játékok között.
		- Megrendelés:
			-A vevő megadja az adatait, majd a fizetési/szállítási módot, és a rendelés felvevője pedig értesítést kap róla.
	Az Admin ezeken felül még jogosult:
		- Módosítás:
			- A termékek neveit, árait meg tudja változtatni.
		- Törlés:
			- Jogosult törölni tételeket az adatbázisból az Admin.
4. - Követelmények

	Funkcionális követelmények:
		- A regisztrált felhasználók adatainak tárolása a GDPR -nak megfelelően
		- A felhasználók tudjanak kosarukhoz hozzáadni és eltávolítani termékeket
		- A felhasználók tudjanak vásárolni a boltból
		- Operációs rendszertől függetlenül jól működjön bármilyen számítógépen

	Nem funkcionális követelmények:
		- Egyszerű, tisztán átlátható kinézet

	Törvényi előírások:
		- A hatályban lévő GDPR szabályozásnak meg kell felelnie


5. - Funkcionális terv
	Rendszerszereplõk:	
		- Felhasználó
		- Admin
	
	Rendszer használati esetek és lefutásaik:
		Felhasználó:
			-Bejelentkezés
			-Regisztráció
			-Termékek böngészése
			-Kosárhoz adni/eltávolítani terméket
			-Vásárlás
		
		Admin:
			-Bejelentkezés
			-Regisztráció
			-Termékek böngészése
			-Termék hozzáadása
			-Termékadatok módosítása
			-Termék törlése
			-Kosárhoz adni/eltávolítani terméket
			-Vásárlás		
		
	Menü hierarchiák:
		Bejelentkezés
			-Bejelentkezés
			-Regisztráció
			
		Fõablak
			-Kijelentkezés
			-Termékek böngészése
			-Termék hozzáadása
			-Termékadatok módosítása
			-Termék törlése
			-Kosárhoz adni/eltávolítani terméket
			-Vásárlás		
			
6. - Fizikai környezet
	A fejlesztõ csapat számára a fejlesztési folyamat az ingyenes,Visual Studio fejlesztõi környezetben zajlik, ami képes az intelligens kódkezelésre (intelligent code completion) az IntelliSense segítségével.
	Ahhoz, hogy a szoftvert használhassuk a számítógépen szükség van egy Windows operációs rendszert futtató számítógépre.

7. - Absztrakt domain modell
	A program mûködése során a felhasználó kétféle szerepkörben szerepelhet: admin vagy felhasználó. Ennek megfelelõen kap az alany funkciókat, 
	amelyek a szerepkörökhöz kizárólagosan vagy nem kizárólagosan kapcsolódnak: azaz vagy csak õ fér hozzá, vagy mindketten a saját oldalukról.
	Az általános alany szerepkörét a bejelentkezés után a Jogosultság vizsgálata dönti el. Az adatbázis kezelését szabályozó funkciók
	kizárólag az admin számára elérhetõek. A további eszközöket mindkét szint használhatja.

8. - 


9. - Adatbázisterv
	Termekek: Termekid(int, primary key, is NOT NULL,), Termeknev(varchar(45),is NOT NULL), Termekar(int,is NOT NULL), Termekleiras(varchar(200)), Kep(varchar45))
	Rendeles: Rendelesid(int, primary key, is NOT NULL), Rendelesidatum(datetime, is NOT NULL), Rendelesicim(varchar(45)), Szallitasmodja(varchar(45)), Fizetesmodja(Varchar(45))
	Admin: Adminid(int, primary key , is NOT NULL), Adminnev (varchar(15), is NOT NULL), Adminjelszo(varchar(15), is NOT NULL), Jogosultsag_Jogosultsagid(int, foreign key, is NOT NULL)
	Felhasznalo:  Felhasznaloid(int, primary key , is NOT NULL), Felhasznalonev (varchar(15), is NOT NULL), Felhasznalojelszo(varchar(15), is NOT NULL), Jogosultsag_Jogosultsagid(int, foreign key, is NOT NULL)
	Jogosultsag: Jogosulsagid(int, primary key, is NOT NULL) 
	- az Admin és Felhasznalo tábla Jogosultsag_Jogosultsagid mezőjéhez kapcsolódik 
	Kapcsolótáblák: Rendeles_has_Termekek: Rendeles_Rendelesid(int, foreign key , is NOT NULL), Termekek_Termekid(int,foreign key, is NOT NULL)
			Admin_has_Rendeles: Admin_adminid(int, foreign key, is NOT NULL), Rendeles_Rendelesid(int, foreign key, is NOT NULL)
			Felhasznalo_has_Rendeles: Felhasznalo_Felhasznaloid(int, foreign key, is NOT NULL), Rendeles_Rendelesid(int, foreign key, is NOT NULL)
	

10. - Implementációs terv
	Perzisztencia osztályok:
			UserMapper - Model		
			GameMapper - Model		
		
		Üzleti logika osztályok:
			LoginLogout
			Registration		
			UserActions
			AdminActions
			
		Kliens oldal osztályai:
			LoginRegWindow
			LoginPage
			RegisterPage
			MainWindow
			EditProductWindow
			AddProductPage
			ModifyProductPage
			RemoveProductPage

11. - Tesztterv

	- Unit teszt
	A program jobb átláthatósága, kezelése és a hibák elkerülésének érdekében fontos, hogy minden
	metódusra legyen írva unit test.


12. - Telepítési terv
	Szükség van egy laptopra, vagy egy asztali számítógépre amin fut az adott alkalmazás.
	Mivel ez egy asztali alkalmazás ezért a sorrend a következő:
	- Futtatás
	- Telepítés
	- Regisztráció
	- Belépés
	Belépés után már használható is a program.


13. - Karbantartási terv
	A szoftver a jövõben nem igényel nagy karbantartásokat, a szükséges karbantartások az 
	alábbi egységekbõl állnak:
	
	- Igény esetén új funkciók implementálása.
	- Igény esetén új műveletek implementálása.

